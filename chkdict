#! /usr/bin/env python
# -*- mode: python; coding: utf-8 -*-
# Copyright 2014, 2017 Peter Williams
# Licensed under the MIT License.

"""Prints out whether words might be in the dictionary or not."""

import sys, gzip

try:
    from cPickle import load as pickle_load
except ImportError:
    import pickle

    pickle_load = lambda f: pickle.load(f, encoding="bytes")

import bloom


# Poor man's argument handling
skip_misses = "-s" in sys.argv
if skip_misses:
    sys.argv.remove("-s")
say_goodbye = "-g" in sys.argv
if say_goodbye:
    sys.argv.remove("-g")

words_to_check = sys.argv[1:]


# Load up our special data structure. pickle loads up a preexisting
# BloomFilter object from disk and returns it to us. The class is
# implemented in bloom.py.
bf = pickle_load(gzip.GzipFile("dictbf.dat.gz", "rb", 9))


# Compute the false-positive rate of the filter.
# FIXME: do something useful with this number?
fp = bf.fprate()

for word in words_to_check:
    if bf.may_contain(word):
        print(word, "MIGHT BE in the dictionary")
    elif not skip_misses:
        print(word, "is DEFINITELY NOT in the dictionary")

if say_goodbye:
    print("Goodbye.")
